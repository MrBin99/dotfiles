---
- name: "Install utility packages"
  ansible.builtin.package:
    name: "{{ item }}"
    state: "present"
  with_items: "{{ utilities_packges }}"
  become: true

- name: "Install Btop configuration"
  stow:
    package: "btop"
    dir: "{{ modules_path }}"
    target: "{{ ansible_env.HOME }}"
    state: "present"

- name: "Remove old Mailpit installation"
  ansible.builtin.file:
    path: "{{ utilities_mailpit_location }}"
    state: "absent"
  become: true

- name: "Download Mailpit install script"
  ansible.builtin.get_url:
    url: "{{ utilities_mailpit_install_url }}"
    dest: "/tmp/mailpit.sh"
    mode: "0755"

- name: "Install Mailpit"
  ansible.builtin.command:
    cmd: "/tmp/mailpit.sh"
    creates: "{{ utilities_mailpit_location }}"
  become: true

- name: "Remove Mailpit install script"
  ansible.builtin.file:
    path: "/tmp/mailpit.sh"
    state: "absent"

- name: "Install Mailpit Fish completions"
  ansible.builtin.shell:
    cmd: "mailpit completion fish > {{ ansible_env.HOME }}/.config/fish/completions/mailpit.fish"
    executable: "/usr/bin/fish"
  changed_when: true

- name: "Install yt-dlp"
  ansible.builtin.get_url:
    url: "{{ utilities_yt_dlp_download_url }}"
    dest: "{{ utilities_yt_dlp_location }}"
    mode: "0755"

- name: "Download yt-dlp sources"
  ansible.builtin.unarchive:
    src: "{{ utilities_yt_dlp_fish_sources_download_url }}"
    dest: "/tmp/"
    remote_src: true

- name: "Install yt-dlp Fish completions"
  ansible.builtin.copy:
    src: "/tmp/yt-dlp/completions/fish/yt-dlp.fish"
    dest: "{{ utilities_yt_dlp_fish_completions_location }}"
    mode: "0644"

- name: "Delete yt-dlp sources"
  ansible.builtin.file:
    path: "/tmp/yt-dlp"
    state: "absent"

- name: "Remove Eza old installation"
  ansible.builtin.file:
    path: "{{ utilities_eza_location_file }}"
    state: "absent"

- name: "Get Eza latest version"
  ansible.builtin.shell:
    cmd: set -o pipefail && curl -s {{ utilities_eza_latest_release_url }} | jq -r '.assets | map(select(.browser_download_url | contains("eza_x86_64-unknown-linux-gnu"))) | first | .browser_download_url' # noqa yaml[quoted-strings]
    executable: "/bin/bash"
  register: "eza_download_url"
  changed_when: false

- name: "Download Eza"
  ansible.builtin.get_url:
    url: "{{ eza_download_url.stdout }}"
    dest: "/tmp/eza.tar.gz"
    mode: "0644"
  when: "eza_download_url.stdout"

- name: "Install Eza"
  ansible.builtin.unarchive:
    src: "/tmp/eza.tar.gz"
    dest: "{{ utilities_eza_location }}"
    remote_src: true
  when: "eza_download_url.stdout"

- name: "Remove Eza tarball"
  ansible.builtin.file:
    path: "/tmp/eza.tar.gz"
    state: "absent"
